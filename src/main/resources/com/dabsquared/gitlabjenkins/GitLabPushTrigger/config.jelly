<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">

	<f:entry title="Build on Merge Request Events" field="triggerOnMergeRequest">
      <f:checkbox default="true" />
    </f:entry>
    <f:entry title="Build on Push Events" field="triggerOnPush">
      <f:checkbox default="true" />
    </f:entry>
    <f:entry title="Rebuild open Merge Requests on Push Events" field="triggerOpenMergeRequestOnPush">
      <f:checkbox default="true" />
    </f:entry>
    <f:entry title="Set build description to build cause (eg. Merge request or Git Push )" field="setBuildDescription">
      <f:checkbox default="true" />
    </f:entry>
    <f:entry title="Add note with build status on merge requests" field="addNoteOnMergeRequest">
      <f:checkbox default="true" />
    </f:entry>
        <f:entry title="All allow all branches (Ignoring Filtered Branches)" field="allowAllBranches">
      <f:checkbox default="false" />
    </f:entry>
    <f:entry title="Filter branches" help="/plugin/gitlab-plugin/help/help-allowedBranches.html">
    	<j:invoke on="${descriptor}" method="getProjectBranches" var="projectBranches" />
    	<j:set var="optionsSize" value="${projectBranches.size()}"/>
   		<select name="allowedBranches" multiple="multiple" size="${optionsSize}" style="min-width:50%;">   		
			<j:forEach var="aBranch" items="${projectBranches}" varStatus="loop">
				<f:option value="${aBranch}" selected="${instance.allowedBranches.isEmpty() || instance.allowedBranches.contains(aBranch)}">${aBranch}</f:option>				
			</j:forEach>
   		</select>
	</f:entry> 
</j:jelly>